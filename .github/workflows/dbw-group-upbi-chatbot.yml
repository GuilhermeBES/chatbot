parameters:
  - name: DeploymentStage
    displayName: Deployment Stage
    type: string
    default: dev
    values:
      - dev
      - stg
      - uat
      - prod

trigger:
  branches:
    include:
      - none

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: upbiinbound-${{ upper(parameters.DeploymentStage) }}
  - name: deploymentStage
    value: ${{ lower(parameters.DeploymentStage) }}
  - name: groupsFile
    value: "./infrastructure/parameters/dbw-upbi-groups.params.json"

name: 'Branch $(Build.SourceBranchName) to DeploymentStage $(deploymentStage)'

jobs:
- job: CreateGroups
  displayName: "Create Permission Groups in Databricks"
  steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          # Função para extrair valores do JSON
          get_json_value() {
            cat $1 | jq -r "$2"
          }

          # Loop sobre os grupos no arquivo JSON e cria cada um
          for group in $(jq -c '.groups[]' ${{ variables.groupsFile }})
          do
            GROUP_NAME=$(echo "$group" | jq -r '.name')
            echo "Criando grupo: $GROUP_NAME"

            # Criar grupo no Databricks usando API
            curl -X POST https://adb-3591651584808535.15.azuredatabricks.net/api/2.0/groups/create \
              -H "Authorization: Bearer dapied2698f4cea8b47f4eeae318ac58c0ed-3" \
              -H "Content-Type: application/json" \
              -d "{\"group_name\": \"$GROUP_NAME\"}"

            # Adicionar membros ao grupo
            for member in $(echo "$group" | jq -r '.members[]')
            do
              echo "Adicionando membro: $member ao grupo: $GROUP_NAME"
              
              # Adicionar membro ao grupo usando API
              curl -X POST https://adb-3591651584808535.15.azuredatabricks.net/api/2.0/groups/add-member \
                -H "Authorization: Bearer dapied2698f4cea8b47f4eeae318ac58c0ed-3" \
                -H "Content-Type: application/json" \
                -d '{
                  "group_name": "'$GROUP_NAME'",
                  "email": "'$member'"
                }'
            done

            echo "Atribuindo permissões ao grupo: $GROUP_NAME"
            
            # Exemplo de atribuição de permissões (para um cluster, por exemplo)
            curl -X POST https://adb-3591651584808535.15.azuredatabricks.net/api/2.0/permissions/assign \
              -H "Authorization: Bearer dapied2698f4cea8b47f4eeae318ac58c0ed-3" \
              -H "Content-Type: application/json" \
              -d '{
                  "access_control_list": [
                    {
                      "group_name": "'$GROUP_NAME'",
                      "permission_level": "CAN_MANAGE"
                    }
                  ],
                  "object_type": "cluster",
                  "object_id": "<YOUR_CLUSTER_ID>"  # Substitua pelo ID do cluster apropriado
              }'
          done

      displayName: "Criando Grupos e Adicionando Membros no Databricks"

- job: CreateDatabricksCluster
  displayName: Create Databricks Cluster
  steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          # Verificar resolução DNS e conectividade
          nslookup adb-2459494057464349.9.azuredatabricks.net
          curl -I https://adb-3591651584808535.15.azuredatabricks.net/api/2.0/clusters/create

          # Tentar criar o cluster
          curl -X POST https://adb-3591651584808535.15.azuredatabricks.net/api/2.0/clusters/create \
              -H "Authorization: Bearer dapied2698f4cea8b47f4eeae318ac58c0ed-3" \
              -d '{
                  "cluster_name": "cls-upbi",
                  "spark_version": "7.3.x-scala2.12",
                  "node_type_id": "Standard_DS3_v2",
                  "autoscale": {
                      "min_workers": 2,
                      "max_workers": 8
                  },
                  "autotermination_minutes": 60
              }'
